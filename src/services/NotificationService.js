// Servi√ßo de Notifica√ß√µes para Nutria Tap PWA
class NotificationService {
  constructor() {
    this.permission = Notification.permission;
    this.subscription = null;
  }

  // Solicitar permiss√£o para notifica√ß√µes
  async requestPermission() {
    if (!('Notification' in window)) {
      console.log('Este navegador n√£o suporta notifica√ß√µes');
      return false;
    }

    if (this.permission === 'granted') {
      return true;
    }

    if (this.permission === 'denied') {
      console.log('Notifica√ß√µes foram negadas');
      return false;
    }

    this.permission = await Notification.requestPermission();
    return this.permission === 'granted';
  }

  // Mostrar notifica√ß√£o local
  showNotification(title, options = {}) {
    if (this.permission !== 'granted') {
      console.log('Permiss√£o para notifica√ß√µes n√£o concedida');
      return;
    }

    const defaultOptions = {
      icon: '/src/assets/nutria_1.png',
      badge: '/src/assets/nutria_1.png',
      vibrate: [200, 100, 200],
      requireInteraction: false,
      ...options
    };

    const notification = new Notification(title, defaultOptions);

    notification.onclick = () => {
      window.focus();
      notification.close();
    };

    return notification;
  }

  // Notifica√ß√£o de recompensa di√°ria
  showDailyRewardNotification() {
    return this.showNotification('üéÅ Recompensa Di√°ria Dispon√≠vel!', {
      body: 'Sua recompensa di√°ria est√° pronta para ser coletada!',
      tag: 'daily-reward',
      requireInteraction: true
    });
  }

  // Notifica√ß√£o de level up
  showLevelUpNotification(level) {
    return this.showNotification(`üéâ Level Up!`, {
      body: `Parab√©ns! Voc√™ alcan√ßou o n√≠vel ${level}!`,
      tag: 'level-up',
      requireInteraction: true
    });
  }

  // Notifica√ß√£o de conquista
  showAchievementNotification(achievement) {
    return this.showNotification('üèÜ Nova Conquista!', {
      body: `Voc√™ desbloqueou: ${achievement}`,
      tag: 'achievement',
      requireInteraction: true
    });
  }

  // Notifica√ß√£o de ranking
  showRankingNotification(rank) {
    return this.showNotification('üìä Ranking Atualizado!', {
      body: `Voc√™ est√° na posi√ß√£o #${rank} do ranking!`,
      tag: 'ranking'
    });
  }
}

const notificationService = new NotificationService();
export default notificationService;
